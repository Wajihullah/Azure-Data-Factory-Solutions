{
	"name": "AS_ICSC_DataBricks_Execute_CSV_To_Parquet",
	"properties": {
		"activities": [
			{
				"name": "Load Entities to Process",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Assign BatchId to Variable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select EntityNumber,EntityName\nfrom [dbo].[EntityIngestionJobHeader]\nwhere IsFileGenerated = 1 \nand IsActive = 1\nand JobType = 'Ingestion' and SourceSystem in ('D365-FINOPS','D365-CE') and EntityNumber<>285"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Iterate Through Each Py Lookup",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Load Entities to Process",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Load Entities to Process').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 50,
					"activities": [
						{
							"name": "Insert Detail Row",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[Sp_InsertConfigRow]",
								"storedProcedureParameters": {
									"EntityNumber": {
										"value": {
											"value": "@item().EntityNumber",
											"type": "Expression"
										},
										"type": "String"
									},
									"FileName": {
										"value": {
											"value": "@item().EntityName",
											"type": "Expression"
										},
										"type": "String"
									},
									"BatchID": {
										"value": {
											"value": "@variables('BatchId')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							}
						},
						{
							"name": "Update Detail Row after Success",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Execute Py",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[Sp_UpdateTransformationRow]",
								"storedProcedureParameters": {
									"JobId": {
										"value": {
											"value": "@item().EntityNumber",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							}
						},
						{
							"name": "Update Detail Row after Fail",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Execute Py",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[Sp_UpdateTransformationRowAfterFail]",
								"storedProcedureParameters": {
									"Error": {
										"value": {
											"value": "@replace(activity('Execute Py').error.message,'''',' ')",
											"type": "Expression"
										},
										"type": "String"
									},
									"JobId": {
										"value": {
											"value": "@item().EntityNumber",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							}
						},
						{
							"name": "Execute Py",
							"type": "DatabricksSparkPython",
							"dependsOn": [
								{
									"activity": "Insert Detail Row",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pythonFile": "dbfs:/ICSCScripts/CSV/AS_CSV_Conversion.py",
								"parameters": [
									"@item().EntityName"
								]
							}
						}
					]
				}
			},
			{
				"name": "Get BatchId",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "SELECT convert(nvarchar(4),isnull(max(BatchID)+1,1)) as BatchID from [dbo].EntityIngestionJobsDetail"
					}
				}
			},
			{
				"name": "Assign BatchId to Variable",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get BatchId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "BatchId",
					"value": {
						"value": "@activity('Get BatchId').output.firstRow.BatchID",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Move to Process Folder",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Iterate Through Each Py Lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitOnCompletion": true
				}
			}
		],
		"variables": {
			"BatchId": {
				"type": "String"
			}
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}